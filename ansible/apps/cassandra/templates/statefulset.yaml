apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cassandra.fullname" . }}
  labels:
    {{- include "cassandra.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "cassandra.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cassandra.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cassandra.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 1800
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - nodetool drain
        env:
          - name: MAX_HEAP_SIZE
            value: 512M
          - name: HEAP_NEWSIZE
            value: 100M
          - name: CASSANDRA_SEEDS
            value: "cassandra-0.cassandra.{{ .Release.Namespace }}.svc.cluster.local"
          - name: CASSANDRA_CLUSTER_NAME
            value: "K8Demo"
          - name: CASSANDRA_DC
            value: "DC1-K8Demo"
          - name: CASSANDRA_RACK
            value: "Rack1-K8Demo"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - /scripts/ready-probe.sh
          initialDelaySeconds: 15
          timeoutSeconds: 12
        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the stateful pod volumes.
        volumeMounts:
        - name: cassandra-data
          mountPath: /cassandra_data
        - name: scripts
          mountPath: /scripts/ready-probe.sh
          subPath: ready-probe.sh
      volumes:
      - name: scripts
        configMap:
          name: {{ .Release.Name }}-configmap
          defaultMode: 0555
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these in production until ssd GCEPersistentDisk or other ssd pd
  volumeClaimTemplates:
  - metadata:
      name: cassandra-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
